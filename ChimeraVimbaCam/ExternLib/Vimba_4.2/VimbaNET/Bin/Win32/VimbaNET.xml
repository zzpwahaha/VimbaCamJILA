<?xml version="1.0"?>
<doc>
    <assembly>
        "VimbaNET"
    </assembly>
    <members>
        <member name="T:AVT.VmbAPINET.EnumEntryCollectionEnumerator">
            <summary>Supports a simple iteration over an <c>EnumEntryCollection</c>.
         <see cref="T:System.Collections.IEnumerator" />. <seealso cref="T:AVT.VmbAPINET.EnumEntryCollection" />.</summary>
        </member>
        <member name="M:AVT.VmbAPINET.EnumEntryCollection.CopyTo(System.Array,System.Int32)">
            <summary>Copies the elements of the ICollection to an Array, starting at a particular Array index.</summary>
            <param name="items">The one-dimensional Array that is the destination of the elements copied from ICollection.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when index exceeds range.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero.</exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.  -or- index is equal to or greater than the length
    of array.  -or- The number of elements in the source System.Collections.ICollection
    is greater than the available space from index to the end of the destination
    array.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.EnumEntryCollection.SyncRoot">
            <summary>Gets an object that can be used to synchronize access to the ICollection.</summary>
            <returns>Returns an object that can be used to synchronize access to the ICollection.</returns>
        </member>
        <member name="P:AVT.VmbAPINET.EnumEntryCollection.IsSynchronized">
            <summary>Gets a value indicating whether access to the ICollection is synchronized (thread safe).</summary>
        </member>
        <member name="P:AVT.VmbAPINET.EnumEntryCollection.Count">
            <summary>Gets the number of elements contained in the ICollection.</summary>
        </member>
        <member name="M:AVT.VmbAPINET.EnumEntryCollection.GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
        </member>
        <member name="P:AVT.VmbAPINET.EnumEntryCollection.default(System.String)">
            <summary>Gets the EnumEntry of the selected input string ID.</summary>
            <param name="enumEntry">String of the enum entry.</param>
            <returns>EnumEntry object.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index exceeds range.</exception>
            <exception cref="T:System.ArgumentNullException">string is null.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.EnumEntryCollection.Item(System.Int32)">
            <summary>Gets the EnumEntry of the selected input index.</summary>
            <param name="index">Number of EnumEntry list index to get.</param>
            <returns>EnumEntry object.</returns>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when index exceeds range.</exception>
        </member>
        <member name="T:AVT.VmbAPINET.EnumEntryCollection">
            <summary>Collects functionality for a list of EnumEntry items, e.g. used in the <c>Feature</c> class.</summary>
        </member>
        <member name="T:AVT.VmbAPINET.FeatureCollectionEnumerator">
            <summary>Supports a simple iteration over a <c>FeatureCollection</c>.
         <see cref="T:System.Collections.IEnumerator" />. <seealso cref="T:AVT.VmbAPINET.FeatureCollection" />.</summary>
        </member>
        <member name="T:VmbTransformInfo">
transform info interface structure
</member>
        <member name="T:VmbTransformParameter">
transform info variant
</member>
        <member name="T:VmbTransformParameteDebayer">
transform info for special debayering modes
</member>
        <member name="T:VmbTransformParameterGamma">
transform info for gama correcting the immage, currently unsuported
</member>
        <member name="T:VmbTransformParameterMatrix3x3">
transform info for color correction using a 3x3 matrix multiplication
</member>
        <member name="T:VmbTransformType">
transform info types
</member>
        <member name="T:VmbDebayerMode">
transform info for special debayering modes
</member>
        <member name="T:VmbImage">
wimba image type
</member>
        <member name="T:VmbImageInfo">
image information
</member>
        <member name="T:VmbPixelInfo">
image pixel information
</member>
        <member name="T:VmbColorSpace">
image color space information
</member>
        <member name="T:VmbPixelLayout">
image pixel layout information
</member>
        <member name="T:VmbYUV444_t">
Structure for accessing data in the YUV 4:4:4 format (YUV)
    prosilica component order

</member>
        <member name="T:VmbBGRA16_t">
Structure for accessing Windows RGBA data.
</member>
        <member name="T:VmbRGBA16_t">
Structure for accessing non-Windows RGB data 
</member>
        <member name="T:VmbBGRA14_t">
Structure for accessing Windows RGBA data.
</member>
        <member name="T:VmbBGRA12_t">
Structure for accessing Windows RGBA data.
</member>
        <member name="T:VmbRGBA14_t">
Structure for accessing non-Windows RGB data 
</member>
        <member name="T:VmbRGBA12_t">
Structure for accessing non-Windows RGB data 
</member>
        <member name="T:VmbBGRA10_t">
Structure for accessing Windows RGBA data.
</member>
        <member name="T:VmbRGBA10_t">
Structure for accessing non-Windows RGB data 
</member>
        <member name="T:VmbABGR8_t">
Structure for accessing Windows RGBA data.
</member>
        <member name="T:VmbBGRA8_t">
Structure for accessing Windows RGBA data.
</member>
        <member name="T:VmbRGBA8_t">
Structure for accessing non-Windows RGB data 
</member>
        <member name="T:VmbBGR14_t">
struct for 14 bit bgr
</member>
        <member name="T:VmbBGR12_t">
Structure for accessing Windows RGB data 
</member>
        <member name="T:VmbBGR10_t">
Structure for accessing Windows RGB data 
</member>
        <member name="T:VmbBGR8_t">
Structure for accessing Windows RGB data 
</member>
        <member name="T:VmbRGB8_t">
Structure for accessing Windows RGB data 
</member>
        <member name="T:VmbAPIInfo">
api info types
</member>
        <member name="T:VmbTechInfo_t">
states of the support for different multimedia technologies
</member>
        <member name="T:VmbSupportState_t">
states of the multi media technology support for operating system and processor.

</member>
        <member name="T:AVT.VmbAPINET.CameraCollectionEnumerator">
            <summary>Supports a simple iteration over a <c>CameraCollection</c>.
         <see cref="T:System.Collections.IEnumerator" />. <seealso cref="T:AVT.VmbAPINET.CameraCollection" />.</summary>
        </member>
        <member name="M:AVT.VmbAPINET.CameraCollection.CopyTo(System.Array,System.Int32)">
            <summary>Copies the elements of the ICollection to an Array, starting at a particular Array index.</summary>
            <param name="items">The one-dimensional Array that is the destination of the elements copied from ICollection.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when index exceeds range.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero.</exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.  <para>-or- index is equal to or greater than the length
    of array.  </para><para>-or- The number of elements in the source System.Collections.ICollection
    is greater than the available space from index to the end of the destination array.</para></exception>
        </member>
        <member name="P:AVT.VmbAPINET.CameraCollection.SyncRoot">
            <summary>Gets an object that can be used to synchronize access to the ICollection.</summary>
            <returns>A System::Object.</returns>
        </member>
        <member name="P:AVT.VmbAPINET.CameraCollection.IsSynchronized">
            <summary>Gets a value indicating whether access to the ICollection is synchronized (thread safe).</summary>
            <returns>A bool value</returns>
        </member>
        <member name="P:AVT.VmbAPINET.CameraCollection.Count">
            <summary>Gets the number of elements contained in the collection.</summary>
            <returns>An int representing the number of elements.</returns>
        </member>
        <member name="M:AVT.VmbAPINET.CameraCollection.GetEnumerator">
            <summary>Returns an enumerator that iterates through the camera collection.</summary>
            <returns>A System::Collections::IEnumerator for iterating through the collection</returns>
        </member>
        <member name="P:AVT.VmbAPINET.CameraCollection.default(System.String)">
            <summary>Fetches the camera with the given ID from the current list.</summary>
            <param name="cameraId">Camera id.</param>
            <returns>A Camera object.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index exceeds range.</exception>
            <exception cref="T:System.ArgumentNullException">cameraID is null.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.CameraCollection.Item(System.Int32)">
            <summary>Fetches the camera with the given <c>index</c> from the current list.</summary>
            <param name="index">Index of the camera to get.</param>
            <returns>A Camera object.</returns>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when index exceeds range.</exception>
        </member>
        <member name="T:AVT.VmbAPINET.CameraCollection">
            <summary>Collects functionality for a list of cameras, e.g. used in the <c>Vimba.Cameras</c> property.</summary>
        </member>
        <member name="M:AVT.VmbAPINET.FeatureCollection.CopyTo(System.Array,System.Int32)">
            <summary>Copies the elements of the ICollection to an Array, starting at a particular Array index.</summary>
            <param name="items">The one-dimensional Array that is the destination of the elements copied from ICollection.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when index exceeds range.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero.</exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.  -or- index is equal to or greater than the length
    of array.  -or- The number of elements in the source System.Collections.ICollection
    is greater than the available space from index to the end of the destination
    array.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.FeatureCollection.SyncRoot">
            <summary>Gets an object that can be used to synchronize access to the ICollection.</summary>
            <returns>Returns an object that can be used to synchronize access to the ICollection.</returns>
        </member>
        <member name="P:AVT.VmbAPINET.FeatureCollection.IsSynchronized">
            <summary>Gets a value indicating whether access to the ICollection is synchronized (thread safe).</summary>
        </member>
        <member name="P:AVT.VmbAPINET.FeatureCollection.Count">
            <summary>Gets the number of elements contained in the ICollection.</summary>
        </member>
        <member name="M:AVT.VmbAPINET.FeatureCollection.GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
        </member>
        <member name="M:AVT.VmbAPINET.FeatureCollection.ContainsName(System.String)">
            <summary>Checks the existence of a feature by a feature name string.</summary>
            <param name="name">String of the feature name.</param>
            <returns>Boolean value.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if name string is null.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.FeatureCollection.default(System.String)">
            <summary>Gets the Feature of the selected input string name.</summary>
            <param name="name">String of the feature name.</param>
            <returns>Feature object.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index exceeds range.</exception>
            <exception cref="T:System.ArgumentNullException">featurename is null.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.FeatureCollection.Item(System.Int32)">
            <summary>Gets the Feature of the selected input index.</summary>
            <param name="index">Number of feature list index to get.</param>
            <returns>Feature object.</returns>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when index exceeds range.</exception>
        </member>
        <member name="T:AVT.VmbAPINET.FeatureCollection">
            <summary>Collects functionality for a list of features, e.g. used in <c>Camera, Interface</c>, or <c>AncillaryData</c>.
         <see cref="T:AVT.VmbAPINET.Feature" />. <seealso cref="P:AVT.VmbAPINET.Camera.Features" />.
         <seealso cref="P:AVT.VmbAPINET.Interface.Features" />. <seealso cref="P:AVT.VmbAPINET.AncillaryData.Features" />.</summary>
        </member>
        <member name="P:AVT.VmbAPINET.EnumEntry.SFNCNamespace">
            <summary>Gets the standard feature naming convention namespace of the enumeration.</summary>
            <returns>String value.</returns>
        </member>
        <member name="P:AVT.VmbAPINET.EnumEntry.Visibility">
            <summary>Gets the visibility of an enumeration.</summary>
            <returns>VmbFeatureVisibilityType value.</returns>
        </member>
        <member name="P:AVT.VmbAPINET.EnumEntry.Value">
            <summary>Gets the integer value of an enumeration.</summary>
            <returns>Int64 value.</returns>
        </member>
        <member name="P:AVT.VmbAPINET.EnumEntry.Tooltip">
            <summary>Gets a tooltip that can be used as pop up help in a GUI.</summary>
            <returns>String value.</returns>
        </member>
        <member name="P:AVT.VmbAPINET.EnumEntry.Description">
            <summary>Gets the description of an enumeration.</summary>
            <returns>String value.</returns>
        </member>
        <member name="P:AVT.VmbAPINET.EnumEntry.DisplayName">
            <summary>Gets a more declarative name of an enumeration.</summary>
            <returns>String value.</returns>
        </member>
        <member name="P:AVT.VmbAPINET.EnumEntry.Name">
            <summary>Gets the name of an enumeration.</summary>
            <returns>String value.</returns>
        </member>
        <member name="T:AVT.VmbAPINET.EnumEntry">
            <summary>Provides Enumeration feature functionality.</summary>
        </member>
        <member name="T:AVT.VmbAPINET.InterfaceCollectionEnumerator">
            <summary>Supports a simple iteration over an <c>InterfaceCollection</c>.
         <see cref="T:System.Collections.IEnumerator" />. <seealso cref="T:AVT.VmbAPINET.InterfaceCollection" />.</summary>
        </member>
        <member name="M:AVT.VmbAPINET.InterfaceCollection.CopyTo(System.Array,System.Int32)">
            <summary>Copies the elements of the ICollection to an Array, starting at a particular Array index.</summary>
            <param name="items">The one-dimensional Array that is the destination of the elements copied from ICollection.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when index exceeds range.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero.</exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.  -or- index is equal to or greater than the length
    of array.  -or- The number of elements in the source System.Collections.ICollection
    is greater than the available space from index to the end of the destination
    array.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.InterfaceCollection.SyncRoot">
            <summary>Gets an object that can be used to synchronize access to the ICollection.</summary>
            <returns>Returns an object that can be used to synchronize access to the ICollection.</returns>
        </member>
        <member name="P:AVT.VmbAPINET.InterfaceCollection.IsSynchronized">
            <summary>Gets a value indicating whether access to the ICollection is synchronized (thread safe).</summary>
        </member>
        <member name="P:AVT.VmbAPINET.InterfaceCollection.Count">
            <summary>Gets the number of elements contained in the ICollection.</summary>
        </member>
        <member name="M:AVT.VmbAPINET.InterfaceCollection.GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
        </member>
        <member name="P:AVT.VmbAPINET.InterfaceCollection.default(System.String)">
            <summary>Gets the Interface of the selected input string ID.</summary>
            <param name="interfaceId">String of the interface id.</param>
            <returns>Interface object.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index exceeds range.</exception>
            <exception cref="T:System.ArgumentNullException">interfaceId is null.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.InterfaceCollection.Item(System.Int32)">
            <summary>Gets the Interface of the selected input index.</summary>
            <param name="index">Number of the interface list index to get.</param>
            <returns>Interface object.</returns>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when index exceeds range.</exception>
        </member>
        <member name="T:AVT.VmbAPINET.InterfaceCollection">
            <summary>Collects functionality for a list of <c>Interface</c> elements.</summary>
        </member>
        <member name="E:AVT.VmbAPINET.Vimba.CreateCamera">
            <summary>
                <see cref="T:AVT.VmbAPINET.Vimba.CreateCameraHandler" /> for the expected signature of event subscribers.</summary>
        </member>
        <member name="T:AVT.VmbAPINET.Vimba.CreateCameraHandler">
            <summary>Delegate used for CreateCamera events.</summary>
            <param name="cameraID"> Camera ID.</param>
            <param name="cameraName"> Camera name.</param>
            <param name="cameraModel"> Camera model.</param>
            <param name="cameraSerialNumber"> Serial number of camera.</param>
            <param name="interfaceID"> Interface ID.</param>
            <param name="interfaceType"> Interface type.</param>
            <param name="interfaceName"> Interface name.</param>
            <param name="interfaceSerialNumber"> Serial number of interface.</param>
            <param name="interfacePermittedAccess"> Permitted access of interface.</param>
        </member>
        <member name="E:AVT.VmbAPINET.Vimba.OnInterfaceListChanged">
            <summary>Event that will be triggered when the interface list changes. 
<see cref="T:AVT.VmbAPINET.Vimba.OnInterfaceListChangeHandler" /> for the expected signature of event subscribers.</summary>
        </member>
        <member name="T:AVT.VmbAPINET.Vimba.OnInterfaceListChangeHandler">
            <summary>Delegate used for OnInterfaceListChanged events.</summary>
            <param name="reason"> VmbUpdateTriggerType enum.</param>
        </member>
        <member name="E:AVT.VmbAPINET.Vimba.OnCameraListChanged">
            <summary>Event that will be triggered when the camera list changes. 
<see cref="T:AVT.VmbAPINET.Vimba.OnCameraListChangeHandler" /> for the expected signature of event subscribers.</summary>
        </member>
        <member name="T:AVT.VmbAPINET.Vimba.OnCameraListChangeHandler">
            <summary>Delegate used for OnCameraListChanged events.</summary>
            <param name="reason"> VmbUpdateTriggerType enum.</param>
        </member>
        <member name="M:AVT.VmbAPINET.Vimba.OpenInterfaceByID(System.String)">
            <summary>Open an interface for feature access.</summary>
            <returns>Interface object.</returns>
            <param name="interfaceID"> ID string used to select the interface.</param>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown when ID not found or method parameter invalid.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Vimba.GetInterfaceByID(System.String)">
            <summary>Gets a specific interface identified by an ID.</summary>
            <returns>Interface object.</returns>
            <param name="interfaceID"> ID string used to select the interface.</param>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown when ID not found or method parameter invalid.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Vimba.OpenCameraByID(System.String,AVT.VmbAPINET.VmbAccessModeType)">
            <summary>Gets a specific camera identified by an ID. The returned camera is already open.</summary>
            <returns>Camera object.</returns>
            <param name="cameraID"> ID string used to select the camera.</param>
            <param name="accessMode"> Parameter of type VmbAccessModeType to set the desired accessibility.</param>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown when ID not found or method parameter invalid.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Vimba.GetCameraByID(System.String)">
            <summary>Gets a specific camera identified by an ID. The returned camera is still closed.</summary>
            <returns>Camera object.</returns>
            <param name="cameraID"> ID string used to select the camera.</param>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown when ID not found or method parameter invalid.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Vimba.Features">
            <summary>Returns a feature collection of the system module.</summary>
            <returns>FeatureCollection object.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Vimba.Cameras">
            <summary>Retrieves a list of all cameras.</summary>
            <returns>CameraCollection.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Vimba.Interfaces">
            <summary>Lists all the interfaces currently visible to Vimba API.</summary>
            <returns>InterfaceCollection.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Vimba.Shutdown">
            <summary>Performs a shutdown on the API module.</summary>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Vimba.Startup">
            <summary>Initializes the Vimba API module.</summary>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Vimba.Version">
            <summary>Retrieves the version number of Vimba API.</summary>
            <returns>VmbVersionInfo_t structure.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="T:AVT.VmbAPINET.Vimba">
            <summary>The Vimba singleton class is the entry point to the Vimba API.
         <para>To start working with Vimba, call <c>Startup()</c> first.</para><para>After finishing work, call <c>Shutdown()</c>.</para></summary>
        </member>
        <member name="P:AVT.VmbAPINET.AncillaryData.Features">
            <summary>A collection of Features dependent on this object.</summary>
            <returns> FeatureCollection object</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.AncillaryData.Buffer">
            <summary>The raw memory buffer of the ancillary data .</summary>
            <returns> array of Bytes</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.AncillaryData.Close">
            <summary>Drops access to the ancillary data inside a frame.</summary>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.AncillaryData.Open">
            <summary>Allows access to the elements of the ancillary data, either via feature access or via the raw buffer.</summary>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
            <remarks>Since ancillary data is only valid for a single frame, but receives its definition from the camera the frame came from, it should be closed as soon as possible.</remarks>
        </member>
        <member name="T:AVT.VmbAPINET.AncillaryData">
            <summary>AncillaryData encapsules additional data that was sent together with an image.
         <para>It is equivalent to GenICam's chunk data.</para></summary>
        </member>
        <member name="M:AVT.VmbAPINET.Feature.ToString">
            <summary>Returns name of feature.</summary>
        </member>
        <member name="M:AVT.VmbAPINET.Feature.IsStreamable">
            <summary>Checks if it is streamable.</summary>
            <returns>Boolean value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Feature.IsWritable">
            <summary>Checks if it is writable.</summary>
            <returns>Boolean value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Feature.IsReadable">
            <summary>Checks if it is readable.</summary>
            <returns>Boolean value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.SelectedFeatures">
            <summary>Gets collection of Features.</summary>
            <returns>FeatureCollection object.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.AffectedFeatures">
            <summary>Gets collection of Features.</summary>
            <returns>FeatureCollection object.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.SFNCNamespace">
            <summary>Gets value of Feature.</summary>
            <returns>String value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.Description">
            <summary>Gets value of Feature.</summary>
            <returns>String value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.ToolTip">
            <summary>Gets value of Feature.</summary>
            <returns>String value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.Visibility">
            <summary>Gets value of Feature.</summary>
            <returns>VmbFeatureVisibilityType value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.Representation">
            <summary>Gets value of Feature.</summary>
            <returns>String value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.Unit">
            <summary>Gets value of Feature.</summary>
            <returns>String value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.PollingTime">
            <summary>Gets value of Feature.</summary>
            <returns>int value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.Category">
            <summary>Gets value of Feature.</summary>
            <returns>String value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.Flags">
            <summary>Gets value of Feature.</summary>
            <returns>VmbFeatureFlagsType value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.DataType">
            <summary>Gets value of Feature.</summary>
            <returns>VmbFeatureDataType value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.DisplayName">
            <summary>Gets value of Feature.</summary>
            <returns>String value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.Name">
            <summary>Gets value of Feature.</summary>
            <returns>String value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.RawValue">
            <summary>Sets/Gets value of Feature.</summary>
            <returns>Byte[] value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Feature.IsCommandDone">
            <summary>Checks if command Feature is done.</summary>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Feature.RunCommand">
            <summary>Executes a command Feature.</summary>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.BoolValue">
            <summary>Sets/Gets value of Feature.</summary>
            <returns>Boolean value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.StringValue">
            <summary>Sets/Gets value of Feature.</summary>
            <returns>String value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Feature.IsEnumValueAvailable(System.Int64)">
            <summary>
                <para>Indicates whether an existing enumeration-value is currently available.</para>
                <para>An enumeration value might not be selectable due to the camera's current configuration.</para>
            </summary>
            <param name="enumValue"> int64 enum value to test.</param>
            <returns>Boolean value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">
                <para>Thrown on issues in the environment. Possible ReturnCodes are:</para>
                <para>  - VmbErrorSuccess:       If no error</para>
                <para>  - VmbErrorInvalidValue:  If the given value is not a valid enumeration-value for this enum</para>
                <para>  - VmbErrorApiNotStarted: Startup() was not called before the current command</para>
                <para>  - VmbErrorInvalidAccess: Operation is invalid with the current access mode</para>
                <para>  - VmbErrorWrongType:     The feature is not an enumeration</para>
            </exception>
        </member>
        <member name="M:AVT.VmbAPINET.Feature.IsEnumValueAvailable(System.String)">
            <summary>
                <para>Indicates whether an existing enumeration-value is currently available.</para>
                <para>An enumeration value might not be selectable due to the camera's current configuration.</para>
            </summary>
            <param name="enumValue"> String enum value to test.</param>
            <returns>Boolean value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">
                <para>Thrown on issues in the environment. Possible ReturnCodes are:</para>
                <para>  - VmbErrorSuccess:       If no error</para>
                <para>  - VmbErrorInvalidValue:  If the given value is not a valid enumeration-value for this enum</para>
                <para>  - VmbErrorApiNotStarted: Startup() was not called before the current command</para>
                <para>  - VmbErrorInvalidAccess: Operation is invalid with the current access mode</para>
                <para>  - VmbErrorWrongType:     The feature is not an enumeration</para>
            </exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.EnumIntValues">
            <summary>Gets all possible Int64 enums of Feature range in an array of Int64.</summary>
            <returns>Int64[] value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.EnumValues">
            <summary>Gets all possible string enums of Feature range in an array of strings.</summary>
            <returns>String[] value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.EnumEntries">
            <summary>Gets collection of EnumEntries.</summary>
            <returns>EnumEntryCollection object.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.EnumIntValue">
            <summary>Sets/Gets int value of Feature.</summary>
            <returns>int value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.EnumValue">
            <summary>Sets/Gets value of Feature.</summary>
            <returns>String value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.FloatRangeMax">
            <summary>Gets maximum value of Feature range.</summary>
            <returns>Double value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.FloatRangeMin">
            <summary>Gets minimum value of Feature range.</summary>
            <returns>Double value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.FloatIncrement">
            <summary>Gets float increment value of Feature.</summary>
            <returns>double value for increment.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown if not implemented or on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.FloatHasIncrement">
            <summary>Gets float increment support of the Feature.</summary>
            <returns>bool support state.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.FloatValue">
            <summary>Sets/Gets value of Feature.</summary>
            <returns>Double value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.IntIncrement">
            <summary>Gets int increment value of Feature.</summary>
            <returns>long value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.IntRangeMax">
            <summary>Gets maximum value of Feature range.</summary>
            <returns>long value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.IntRangeMin">
            <summary>Gets minimum value of Feature range.</summary>
            <returns>long value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Feature.IntValue">
            <summary>Sets/Gets value of Feature.</summary>
            <returns>long value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="E:AVT.VmbAPINET.Feature.OnFeatureChanged">
            <summary>Event will be triggered when the feature changes. 
<see cref="T:AVT.VmbAPINET.Feature.OnFeatureChangeHandler" /> for the expected signature of event subscribers.</summary>
        </member>
        <member name="T:AVT.VmbAPINET.Feature.OnFeatureChangeHandler">
            <summary>Delegate used for OnFeatureChanged events </summary>
            <param>Feature that was the reason of this event</param>
        </member>
        <member name="T:AVT.VmbAPINET.Feature">
            <summary>Collects all functionality for Vimba features.</summary>
        </member>
        <member name="P:AVT.VmbAPINET.Frame.Timestamp">
            <summary>Returns the time stamp.</summary>
            <returns>System::UInt64.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Frame.FrameID">
            <summary>Returns the frame ID.</summary>
            <returns>System::UInt64.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Frame.OffsetY">
            <summary>Returns the y offset of the image.</summary>
            <returns>System::UInt32.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Frame.OffsetX">
            <summary>Returns the x offset of the image.</summary>
            <returns>System::UInt32.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Frame.Height">
            <summary>Returns the height of the image.</summary>
            <returns>System::UInt32.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Frame.Width">
            <summary>Returns the width of the image.</summary>
            <returns>System::UInt32.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Frame.PixelFormat">
            <summary>Returns the GeV compliant pixel format.</summary>
            <returns>VmbPixelFormatType.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Frame.BufferSize">
            <summary>Returns the memory size of the frame buffer holding both the image data and the ancillary data.</summary>
            <returns>uint value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Frame.AncillarySize">
            <summary>Returns the memory size of the chunk data.</summary>
            <returns>System::UInt32.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Frame.ImageSize">
            <summary>Returns the memory size of the image.</summary>
            <returns>System::UInt32 value.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Frame.ReceiveStatus">
            <summary>Returns the receive status of a frame.</summary>
            <returns>VmbFrameStatusType.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Frame.Fill(System.Drawing.Bitmap@)">
            <summary>Fills the given bitmap with current buffer data in an appropriate pixel format.
<para>If <c>bitmap</c> is null, an appropriate object will be created and filled with frame data.</para><para>If <c>bitmap</c> is not null, the existing object will be filled with frame data.</para><para>For more details, see chapter "Converting Frames into Bitmaps" in the Vimba .NET manual.</para></summary>
            <param name="bitmap">Reference to a bitmap.</param>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment or bitmap failure.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Frame.Buffer">
            <summary>Returns the complete buffer including image and chunk data.</summary>
            <returns>Byte[] array.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Frame.AncillaryData">
            <summary>Returns the part of a frame that describes the chunk data as an object.
         <see cref="T:AVT.VmbAPINET.AncillaryData" /></summary>
            <returns>AncillaryData object.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Frame.#ctor(System.Byte[])">
            <summary>Creates an instance of class Frame.</summary>
            <param name="buffer">Buffer array to use.</param>
        </member>
        <member name="M:AVT.VmbAPINET.Frame.#ctor(System.Int64)">
            <summary>Creates an instance of class Frame.</summary>
            <param name="bufferSize"> Size of internal buffer to be created.</param>
        </member>
        <member name="T:AVT.VmbAPINET.Frame">
            <summary>Collects functionality for handling image data sent by a camera.</summary>
        </member>
        <member name="P:AVT.VmbAPINET.IFrame.Buffer">
            <summary>Gets the buffer of a Frame.</summary>
            <returns>An array of unsigned char.</returns>
        </member>
        <member name="P:AVT.VmbAPINET.IFrame.PixelFormat">
            <summary>Gets the pixel format of a Frame.</summary>
            <returns>VmbPixelFormatType.</returns>
        </member>
        <member name="P:AVT.VmbAPINET.IFrame.Width">
            <summary>Gets the width of a Frame.</summary>
            <returns>System::UInt32.</returns>
        </member>
        <member name="P:AVT.VmbAPINET.IFrame.Height">
            <summary>Gets the height of a Frame.</summary>
            <returns>System::UInt32.</returns>
        </member>
        <member name="T:AVT.VmbAPINET.IFrame">
            <summary>Interface to cover important properties of the <c>Frame</c> class.</summary>
        </member>
        <member name="M:AVT.VmbAPINET.Interface.ToString">
            <summary>Returns name of interface.</summary>
            <returns>System::String.</returns>
        </member>
        <member name="P:AVT.VmbAPINET.Interface.Features">
            <summary>Returns a feature collection of the interface.</summary>
            <returns>FeatureCollection object.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Interface.PermittedAccess">
            <summary>Gets the access mode of an interface.</summary>
            <returns>VmbAccessModeType.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Interface.SerialNumber">
            <summary>Gets the serial number of an interface.</summary>
            <returns>System::String.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Interface.Name">
            <summary>Gets the name of an interface.</summary>
            <returns>System::String.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Interface.Type">
            <summary>Gets the type of an interface, e.g. FireWire or Ethernet.</summary>
            <returns>VmbInterfaceType.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Interface.Id">
            <summary>Gets the ID of an interface.</summary>
            <returns>System::String.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Interface.Close">
            <summary>Closes an interface. Will free the access to this interface.</summary>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Interface.Open">
            <summary>Opens an Interface. Will provide access to an interface.</summary>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="T:AVT.VmbAPINET.Interface">
            <summary>An Interface object represents a logical interface as provided by the underlying transport layers.
         <para>Before opening it with <c>Interface.Open</c>, only static properties can be queried.</para><para>After opening, the interface features are accessible.</para></summary>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.LoadSaveSettingsSetup(AVT.VmbAPINET.VmbFeaturePersistType,System.Int32,System.Int32)">
            <summary>Sets Load/Save settings behaviour</summary>
            <remarks>Camera must be opened</remarks>
            <param name="persistType">Determines which feature shall be saved/loaded</param>
            <param name="maxIterations">Determines how many iterations shall be used during loading</param>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.LoadCameraSettings(System.String)">
            <summary>Loads the current camera setup from an XML file into the camera</summary>
            <remarks>Camera must be opened</remarks>
            <param name="fileName">Determines name and/or path of xml file to be loaded</param>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.SaveCameraSettings(System.String)">
            <summary>Saves the current camera setup to an XML file</summary>
            <remarks>Camera must be opened</remarks>
            <param name="fileName">Determines name and/or path of xml file to be saved</param>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.ToString">
            <summary>Returns the name of camera.</summary>
            <returns>System::String.</returns>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.StopContinuousImageAcquisition">
            <summary>Stops streaming and frees the used frames</summary>
            <remarks> This is a convenience method. Deregister the FrameObserver again. </remarks>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.StartContinuousImageAcquisition(System.Int32)">
            <summary>Starts streaming and allocates the needed frames.</summary>
            <remarks>This is a convenience method.
          <para>Register a FrameObserver and queue the received Frame(s). </para></remarks>
            <param name="frameCount"> count of Frame(s) which should be used for this method.</param>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment or when the passed frame count is invalid.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.AcquireMultipleImages(AVT.VmbAPINET.Frame[]@,System.Int32,System.Int32@)">
            <summary>Gets multiple images synchronously and returns the number of valid frames.</summary>
            <remarks> This is a convenience method, doing all the necessary startup methods and cleanup afterwards.</remarks>
            <param name="frames"> Reference to array of empty Frame objects. The size of the array determines the maximum number of images to grab.</param>
            <param name="timeout"> timeout how long it should wait for the image (in milliseconds). The timeout is used for each image, not for the whole sequence.</param>
            <param name="numFramesCompleted"> number of frames with valid frame data.</param>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment or when the passed Frame array is invalid.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.AcquireMultipleImages(AVT.VmbAPINET.Frame[]@,System.Int32)">
            <summary>Gets multiple images synchronously.</summary>
            <remarks> This is a convenience method, doing all the necessary startup methods and cleanup afterwards.</remarks>
            <remarks> If a timeout is encountered, the method is aborted.</remarks>
            <param name="frames"> Reference to array of empty Frame objects. The size of the array determines the exact number of images to grab.</param>
            <param name="timeout"> timeout how long the method should wait for the image (in milliseconds). The timeout is used for each image, not for the whole sequence.</param>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment or when the passed Frame array is invalid.</exception>
            <exception cref="T:System.TimeoutException">Thrown if acquisition times out.</exception>
            <exception cref="T:System.ExecutionEngineException">Thrown on issues in the system environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.AcquireSingleImage(AVT.VmbAPINET.Frame@,System.Int32)">
            <summary>Acquires one image into a <c>Frame</c>.</summary>
            <remarks> This is a convenience method, doing all the necessary startup methods and cleanup afterwards, 
          so using it in a loop will be relatively slow. Instead, consider using 
          <c>AcquireMultipleImages</c> or <c>StartContinuousImageAcquisition</c></remarks>
            <param name="frame"> Reference to an empty Frame object. It will contain the image after the call.</param>
            <param name="timeout"> Timeout how long it should wait for the image (in milliseconds).</param>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the Vimba environment.</exception>
            <exception cref="T:System.TimeoutException">Thrown if acquisition times out.</exception>
            <exception cref="T:System.ExecutionEngineException">Thrown on issues in the system environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Camera.Features">
            <summary>A feature collection of the camera.</summary>
            <returns>FeatureCollection.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="E:AVT.VmbAPINET.Camera.OnFrameReceived">
            <summary>Event will be triggered when a Frame buffer is filled with data. 
<see cref="T:AVT.VmbAPINET.Camera.OnFrameReceivedHandler" /> for the expected signature of event subscribers.</summary>
        </member>
        <member name="T:AVT.VmbAPINET.Camera.OnFrameReceivedHandler">
            <summary>Delegate used for OnFrameReceived events.</summary>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.EndCapture">
            <summary>Stops the API from being able to receive frames from this camera.</summary>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.StartCapture">
            <summary>Prepares the API for incoming frames from this camera.</summary>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.FlushQueue">
            <summary>Flushes the capture queue.</summary>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.QueueFrame(AVT.VmbAPINET.Frame)">
            <summary>Queues a frame that may be filled during frame capturing.</summary>
            <param name="frame"> Frame to queue.</param>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment or when the passed Frame is invalid.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.RevokeAllFrames">
            <summary>Revokes all frames assigned to this certain camera.</summary>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.RevokeFrame(AVT.VmbAPINET.Frame)">
            <summary>Revokes a frame from the API.</summary>
            <param name="frame"> Frame to revoke.</param>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment or when the passed Frame is invalid.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.AnnounceFrame(AVT.VmbAPINET.Frame)">
            <summary>Announces a frame to the API that may be queued for frame capturing later.</summary>
            <param name="frame"> Frame to announce.</param>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment or when the passed Frame is invalid.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.WriteMemory(System.UInt64,System.Byte[],System.UInt32@)">
            <summary>Writes a block of memory. The number of bytes to write is determined by the size of the provided buffer.</summary>
            <param name="address"> start address to write.</param>
            <param name="bufferArray"> array of data buffer.</param>
            <param name="completedWrites"> Reference to an uint. The number of read memory bytes will be saved to this variable.</param>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment or when the length is invalid.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.ReadMemory(System.UInt64,System.Byte[]@,System.UInt32,System.UInt32@)">
            <summary>Reads a block of memory. The number of bytes to read is determined by the size of the provided buffer.</summary>
            <param name="address"> start address to read.</param>
            <param name="bufferArray"> Reference to array of data buffer. Memory will be saved to this array.</param>
            <param name="readLength"> uiReadLength determines how many bytes to read.</param>
            <param name="completedReads"> Reference to an uint. The number of read memory bytes will be saved to this variable.</param>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment or when the length is invalid.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.WriteRegisters(System.UInt64[],System.UInt64[],System.UInt32@)">
            <summary>Writes one or more registers consecutively. The number of registers to write is determined by the number of provided addresses.</summary>
            <param name="addressArray"> Array of addresses. Size of address buffer determines how many registers to write.</param>
            <param name="dataArray"> Array of register data.</param>
            <param name="completedWrites"> Reference to an uint. The number of written registers will be saved to this variable.</param>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment or when the address/data array is invalid.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.ReadRegisters(System.UInt64[],System.UInt64[]@,System.UInt32@)">
            <summary>Reads one or more registers consecutively. The number of registers to read is determined by the number of provided addresses.</summary>
            <param name="addressArray"> Array of addresses. Size of address buffer determines how many registers to read.</param>
            <param name="dataArray"> Reference to array of data. Registers will be saved to this array.</param>
            <param name="completedReads"> Reference to an uint. The number of read registers will be saved to this variable.</param>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment or when the address array is invalid.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Camera.PermittedAccess">
            <summary>Gets the permitted access of the camera.</summary>
            <returns>VmbAccessModeType.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Camera.InterfaceType">
            <summary>Gets the type of the interface the camera is connected to, and consequently the type of the camera itself.</summary>
            <returns>VmbInterfaceType.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Camera.InterfaceID">
            <summary>Gets the camera interface id.</summary>
            <returns>System::String.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Camera.SerialNumber">
            <summary>Gets the camera serial number.</summary>
            <returns>System::String.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Camera.Model">
            <summary>Gets the camera model.</summary>
            <returns>System::String.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Camera.Name">
            <summary>Gets the camera name.</summary>
            <returns>System::String.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="P:AVT.VmbAPINET.Camera.Id">
            <summary>Gets the camera id.</summary>
            <returns>System::String.</returns>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.Close">
            <summary>Closes a Camera. Frees the access to this camera.</summary>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.Open(AVT.VmbAPINET.VmbAccessModeType)">
            <summary>Opens a Camera. Use this method to access features of a camera and - in case of full access - to acquire images.</summary>
            <param name="accessMode"> Parameter of type VmbAccessModeType to set the desired accessibility.</param>
            <exception cref="T:AVT.VmbAPINET.VimbaException">Thrown on issues in the environment.</exception>
        </member>
        <member name="M:AVT.VmbAPINET.Camera.#ctor(System.String,System.String,System.String,System.String,System.String,AVT.VmbAPINET.VmbInterfaceType,System.String,System.String,AVT.VmbAPINET.VmbAccessModeType)">
            <summary>Protected constructor. Only for use in derived classes.</summary>
            <param name="cameraID">The ID of the camera.</param>
            <param name="cameraName">The name of the camera.</param>
            <param name="cameraModel">The model name of the camera.</param>
            <param name="cameraSerialNumber">The serial number of the camera.</param>
            <param name="interfaceID">The ID of the interface the camera is connected to.</param>
            <param name="interfaceType">The type of the interface the camera is connected to.</param>
            <param name="interfaceName">The name of the interface the camera is connected to.</param>
            <param name="interfaceSerialNumber">The serial number of the interface the camera is connected to.</param>
            <param name="interfacePermittedAccess">The access mode of the interface the camera is connected to.</param>
        </member>
        <member name="T:AVT.VmbAPINET.Camera">
            <summary>A Camera object represents a physical camera.
         <para>Before opening it with <c>Camera.Open</c>, only the static properties can be queried.</para><para>After opening, the camera features are accessible and you may acquire images.</para></summary>
        </member>
        <member name="M:AVT.VmbAPINET.VimbaException.MapReturnCodeToString">
            <summary>Maps current return code to a message.</summary>
            <returns>System::String.</returns>
        </member>
        <member name="P:AVT.VmbAPINET.VimbaException.ReturnCode">
            <summary>Holds the return code of the underlying methods which triggered the exception.</summary>
            <returns>System::Int32.</returns>
        </member>
        <member name="M:AVT.VmbAPINET.VimbaException.#ctor(System.Int32,System.String)">
            <summary>Initializes a new instance of the AVT::VmbAPINET::VimbaException class.</summary>
            <param name="returnCode"> exception/result value</param>
            <param name="message"> exception/result text</param>
        </member>
        <member name="T:AVT.VmbAPINET.VimbaException">
            <summary>The exception that is thrown when there are problems in the execution of VimbaNET methods.</summary>
        </member>
    </members>
</doc>